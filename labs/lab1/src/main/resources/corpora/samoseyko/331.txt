tl;dr; В рекрутинге больше бардака, чем вы думаете. Расскажу четыре истории, где отличным инженерам отказали по причинам, абсолютно не связанным с их профессиональными знаниями или соответствием корпоративной культуре.   
 
Когда люди не получают предложения о работе, то часто думают, что это их вина: «Меня отвергли три компании подряд, наверное, я никудышный инженер». Поработав некоторое время в ИТ-рекрутинге, могу вас заверить, что случайные факторы и шум ( ложноотрицательные результаты ) тоже играют важную роль. Часто отказы действительно вызваны случайными вещами и иррациональными причинами. 
 
 Страшилка № 1: кандидата отвергли из-за фреймворка 
На позицию фронтенд-разработчика в агентстве я передал инженера, который участвовал в разработке ECMAScript и сделал значительный вклад в некоторые другие проекты open source. Мне понадобилось несколько недель, чтобы найти этого человека, и несколько часов для его правильной оценки, включая видеоинтервью (мы любим такое делать на  coderfit.com ). Его кандидатуру отверг программист из агентства после  10-минутного просмотра примеров кода . С ним даже не пообщались лично, а просто прислали «консерву» — шаблонное письмо по электронной почте: 
 
 «[…]Хотя ваше резюме и сопроводительное письмо очень конкурентоспособны, наши специалисты по найму рассмотрели вашу заявку и не выбрали её для дальнейшего рассмотрения. […]»   
Это действительно плохой ответ, потому что никаких сопроводительных писем не подавалось. После прочтения такого я всё бросил, поехал к ним в офис и поговорил с программистом, который отверг кандидатуру  лучшего фронтенд-разработчика, что мне попадался в 2017 году . 
 
Сначала программист не мог чётко объяснить причину отказа, просто сказал, что  «код переусложнён» , хотя на самом деле он был идеально структурирован, со всеми операторами ES6 и короткими функциями на своих местах. После десятиминутного обсуждения этой темы причина отказа стала более понятной: кандидат использовал фреймворк MVC, неизвестный рецензенту. Я был так впечатлён использованием этого фреймворка во время своего собеседования с кандидатом, что не мог понять, как это могло стать проблемой. 
 
Некоторая информация, почему мы использовали неизвестный фреймворк MVC. Это агентство, которое искало фронтенд-разработчика, было агентством, которое выполняло повторяющиеся задачи для каждого клиента. Ведущий программист (не тот, что рассматривал кандидатуру) пожаловался мне, что «каждый раз им приходится заново изобретать велосипед». Предложенный мной кандидат  разработал в свободное время новый фреймворк , который решал некоторые из проблем агентства. 
 
Поскольку интервьюер не прочитал мои заметки и не посмотрел запись видеоинтервью,  он был не в курсе, почему кандидат использовал этот фреймворк, и просто нажал «Отказать» в ATS .  [Система по управлению кандидатами, Applicant Tracking System — прим. пер.].  А в тот момент ведущий программист (который выступал за этого кандидата) был в отпуске и не мог вмешаться. 
 
 Совет : Обычно спрашивать мнение других людей перед оценкой кандидата — плохая идея, но в некоторых случаях это имеет смысл, если  даёт дополнительный контекст . 
 
Эта история особенно печальна, потому что исполнительный директор заплатил мне гонорар, чтобы я нашёл «лучших людей». Так что я особенно сильно напрягался для этой задачи, однако не получал никакой поддержки со стороны сотрудников и нанимающих инженеров, чтобы по-настоящему оценить кандидатов, которых я присылал. Тот программист, отвергнувший кандидатуру моего кандидата, даже сказал мне:  «Рекрутинг для нас — наименьший приоритет» . Если вы получаете гонорар как рекрутер, то прилагаете больше усилий, но всё это почти ничего не стоит, если нет поддержки от всей команды, для которой вы ищете сотрудников. 
 
Что ещё хуже, кандидат больше не хотел проводить собеседования  ни с одним швейцарским работодателем , когда с ним обошлись таким образом («консерва» от HR, никакой обратной связи, ожидание в течение двух недель, пока его код рассмотрят). 
 
 Страшилка № 2: бывшего разработчика из Google ПОЧТИ отвергли, потому что он не помнил наизусть теорему Байеса 
Один стартап искал разработчика на Python и назначил собеседование с программистом, который четыре года работал в подразделении Google в Цюрихе. Было непросто представить этого парня стартапам: те думали, что он запросит сумму в размере компенсации Google Zurich (более 200 тыс. франков — вдвое больше, чем средняя годовая зарплата программиста). 
 
Однако он оказался благоразумен в своих требованиях и всего лишь хотел найти гармоничную команду с интересными техническими задачами. Так что он получал высшую оценку на каждом интервью и производил мощное впечатление почти на всех, с кем разговаривал. Один стартап провёл его через все четыре раунда собеседований, а на последнем раунде он разговаривал с каждым сотрудником один на один. 
 
И вот во время обсуждения после первого дня один сотрудник встал и заявил, что кандидат не знает или не может объяснить  теорему Байеса , и поэтому его нельзя брать на работу. 
 
Всем было особенно без разницы и они молчаливо согласились, кроме технического директора. Это единственный человек, лично заинтересованный в наборе сотрудников. Он жаловался исполнительному директору, что компания уже несколько месяцев не нанимала новых сотрудников. Поэтому он использовал своё право вето и дал понять, что незнание пустяковой темы наизусть — глупая причина отказывать инженеру. В итоге они взяли этого человека.  Как выяснилось, он стал самым ценным сотрудником, который когда-либо работал в компании . 
 
Технический директор оказался прав. Этот кандидат установил на рабочем компьютере окружение разработчика в рекордное время, нашёл и исправил три бага в первый же день работы. В конце концов, все были чрезвычайно впечатлены и рады, что пригласили на работу этого парня. 
 
Головоломки или вопросы на алгоритмы используются в Google и других компаниях, потому что эти крупные фирмы могут позволить себе большое количество ложнооотрицательных результатов в процессе собеседований — они могут отказывать кандидатам, которые могли бы стать великолепными сотрудниками, потому что у них двери не закрываются от желающих (Google получает три миллиона заявлений в год). Как однажды мудро заметила  Эрин Пташек : «Определение безумия — это поступать как Google и надеяться, что у вас получится». 
 
 Страшилка № 3: отдел кадров ЗАБЫЛ о кандидате 
Обычно я внимательно слежу, что происходит с моими кандидатами и как они проходят через воронку найма. Но в тот раз я был в отпуске, а исполнительный директор пообещал, что примет его на работу. Но сотрудник отдела кадров, который работал удалённо из другой страны, не обработал заявку. Поскольку я находился в отпуске, я тоже не выходил на связь, и кандидат несколько недель думал, что его заявку отклонили, потому что никто не выходил на связь (на самом деле это не означает отказа). Типичная инженерная ошибка. 
 
 Через два месяца  я связался с кандидатом и спросил, как дела. Ни он, ни сотрудник отдела кадров не могли понять, почему никто не обработал его заявку. Так что я написал письмо с указанием в  CC:  всех причастных к этому процессу, с просьбой завершить процедуру оформления сотрудника. 
 
Сотрудникам отделов кадров обычно мало платят и они безнадёжно дезорганизованы. Штатные рекрутеры часто выполняют административные задачи, а не занимаются поиском сотрудников. Или ещё хуже, иногда в отделе кадров вообще нет сотрудника, который отвечает за приём заявок, отказы или перенаправление резюме. Эти ребята часто не разбираются в технических профессиях. За 15 минут им объясняют, кого нужно найти, а затем предполагается, что они выполняют правильный «отбор» кандидатов. Из-за непонимания контекста и сути технических профессий часто это приводит к плохим результатам. 
 
 Страшилка № 4: кандидата отвергли, потому что он был лучше, чем интервьюер 
 В  комментариях  к этой статье на Hacker News упомянули, что иногда отличных кандидатов отвергают, потому что  они слишком хороши . Так что я расскажу историю, которая мне запомнилась.   
 
В той истории я до сих пор думаю, что кандидат оказался лучше интервьюера. Кандидатом был 22-летний парень, участник проектов open-source, программист-вундеркинд, кандидатуру которого отклонил после скрининга кода разработчик, назовём его «Джон». Я был настолько шокирован этим отказом, что организовал телефонный разговор и обсудил этот вопрос. В телеконференции участвовали три человека: HR-менеджер, Джон и я. 
 
Все причины, которые называл Джон во время разговора, были немного смешными, и я не мог понять, серьёзно он говорит или нет. Также патчи, пулл-реквесты и прочая активность Джона на Github выглядели довольно дерьмово, но именно он отвечал за скрининг кода, так что пришлось принимать в учёт его мнение. 
 
Джон указал на некоторые проблемы в коде кандидата, которые он даже показал на общем экране. Все упомянутые им вещи больше касались стиля и не были реальными проблемами. Все остальные предметы его критики казались плохими на первый взгляд, но в реальности имели под собой хорошие основания (подробные блоки try-catch из-за не очень чистого API, с которым взаимодействовал код). Затем у меня кончилось терпение. Критика заставила меня перейти рамки приличия — и я упомянул, что  качество кода кандидатов лучше, чем хрень Джона на Github . Тут мой темперамент меня подвёл. Кроме того, HR тут же меня остановил и сказал, что «здесь мы оцениваем не Джона». На это было сложно что-то ответить, так что я сменил тему и вскоре закончил разговор. 
 
Это может стать темой другой статьи, когда и почему людям втайне нравится принимать на работу кандидатов,  которые чуть глупее и/или чуть менее способны, чем они . Как индивидуальные интервьюеры, так и компании в целом могут бояться нанимать сотрудников, которые более квалифицированы и более талантливы, чем они сами. Отказ из-за того, что кандидат слишком хорош, неприемлем — поэтому они пользуются уловками, концентрируясь в тех областях, где кандидат слаб или отличается от нормы.  Вот статья о том, как это предположительно делалась в учебных заведениях Советского Союза   (специальные задачи на устных экзаменах в МГУ, которые предлагали решить абитуриентам еврейской национальности, с решениями — прим. пер) . 
 
 Выводы 
В рекрутинге больше бардака, чем вы думаете. Если вам отказали, это вовсе не значит, что вы плохой инженер, потому что отказы часто происходят по ошибке. 
 
Если вы задаёте себе вопрос, зачем существуют кадровые агентства, ну, иногда для того, чтобы предотвратить такие вещи, какие описаны в этой статье. Мы зарабатываем на жизнь тем, что находим оптимальные сочетания кандидатов и вакансий и — кроме владельцев компании — мы больше других заинтересованы в том, чтобы подходящий кандидат был устроен на работу. Если вы знаете сумасшедшие истории отказов в приёме на работу, пишите в комментариях.


