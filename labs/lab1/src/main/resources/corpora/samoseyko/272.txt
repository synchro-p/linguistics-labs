Это сложная тема, которая периодически всплывает в среде IT-специалистов, об этом сказано уже немало, а вот для «неайтишников» многое может оказаться новостью. Как для тех, кто хочет «войти в IT», так и для тех, кто по роду своей деятельности вынужден работать вместе с IT-службами. Некоторые вещи будут очевидны для IT-специалистов, но не очевидными для других. Иногда из-за их непонимания люди допускают болезненные ошибки. Не только и не столько со своей карьерой, сколько в своём бизнесе делают ставку не на тех людей. Поэтому давайте разберём этот вопрос без эмоций и на понятном для неспециалистов языке. Меня зовут Константин Митин. 15 лет занимаюсь коммерческой IT-разработкой, прошёл путь от простого программиста до сооснователя и руководителя группы IT-компаний. Успел побыть тим-лидом, руководителем филиала разработки крупной федеральной IT-компании. Один из идеологов концепции  IT~BP  (партнёрство между IT и бизнесом). Неверно было бы полагать, что дело в «молодости» области информационных технологий. Это не правда. Знаете, первое поколение программистов уже давно умерло от старости. Многие профессиональные программисты уже вышли на пенсию. Если вам хочется глубоко погрузиться в прошлое, то посетите страничку  Владимира Орлова  и прочитайте его статьи: Пятьдесят лет на стезе программирования. Часть I. Начало пути. Отчий дом и Казанское суворовское военное училище Пятьдесят лет на стезе программирования. Часть II. Первые шаги. Учёба в Дзержинке и я еду в Вентспилс-8 Пятьдесят лет на стезе программирования. Часть III. Становление. На страже космических рубежей и путь в большую науку Владимир Орлов - это тот человек, который учился у первых программистов, а сейчас он пишет статьи о своём более чем пятидесятилетием опыте в отрасли. Разве можно называть такую область «молодой»? Широко известная книга Фредерика Брукса «Мифический человеко-месяц, или Как создаются программные системы» издана в 1975 году и содержит ранее опубликованные журнальные статьи автора. Брукс родился в 1931 году, он ещё жив, сейчас ему 91 год. Неверно было бы сказать, что область информационных технологий стала популярной лишь недавно.  10 марта 2000 года лопнул пузырь доткомов , в результате чего по мировой экономике был нанесен мощный удар. Еще в 90-е года XX-века рынок информационных технологий был перегретым.  Неправдой является и то, что это просто российский рынок является молодым. Нет, у нас все так же, как и у других. 6 декабря 2016 года Don Denoncourt написал статью  On Getting Old(er) in Tech  (доступна в переводе  Как стареть в IT ). 18 мая 2021 года Anupam Chugh написал статью  When Do Programmers Retire? Is 35 the End?  (доступна в переводе  35 лет – конец карьеры? Когда программисты выходят на пенсию? ). Тезис о том, что все дорастают до руководящих должностей, не выдерживает никакой критики. Дело даже не в том, что управление людьми - вещь непростая, так ещё руководящих должностей на всех не хватит. Так в чём же дело? Неужели действительно в возрасте? Нет, не в нём. Всё дело в профессиональном выгорании. Программистом можно стать («войти в IT») и после 40 лет, вопрос лишь в том, сколько лет вы сможете продержаться.  Что же происходит и в чём дело? Нужно постоянно учиться В области информационных технологий, как в сказке про Алису в стране чудес, нужно очень быстро бежать, чтобы оставаться на месте. А если хочешь куда-то попасть, то надо бежать ещё быстрее. Вообще IT - это злая, жестокая и выматывающая сказка. Работа в области информационных технологий - это не спринтерский забег, это марафонская дистанция. Нельзя просто взять и ворваться в IT. Лет через 5-10 ваши навыки и достижения обесценятся. Бежать придётся не только быстро, но и долго. В IT вообще всё быстро меняется, появляются новые технологии, уходят старые технологии. Сегодня востребовано одно, завтра другое. Честно говоря, профессиональный программист может изучить новый для себя язык (близкий по стеку) за 2-4 недели. То есть через месяц человек выйдет на производительность среднего разработчика, но уже на новом языке. На примере нашей компании. Как-то мы решили, что наши бэкенд разработчики (разработчики серверной части web-приложений) должны владеть PHP и Python одновременно. На освоение нового языка мы им давали как раз 2 недели. Наши фронтенд разработчики (разработчики клиентской части web-приложений) все умеют разрабатывать на Flutter. То есть они умеют писать кроссплатформенные мобильные приложения (сразу под Android и под iOs). Flutter - хорошая технология, теперь у нас в компании нет разработчиков мобильных приложений на нативных языках (Java, Kotlin, Object-C, Swift), они проиграли конкуренцию по скорости и стоимости разработки. Конечно, это не значит, что нативной разработки завтра вообще не станет. Иногда, но далеко не каждый день, нужно писать сложные приложения, где без нативных средств совсем никак, но такие задачи встречаются нечасто. Мобильное приложение обычной сложности можно написать и на Flutter. А простое - вообще без услуг программиста. В какой-то момент окажутся востребованы только самые сильные разработчики мобильных приложений на нативных языках, остальным придётся куда-то уйти. Скажем честно, постоянно делать инвестиции в самообучение выходит не у каждого. Легко учиться, когда тебе 16-20 лет, затем учиться все тяжелее и тяжелее. В какой-то момент начинаешь замечать, как люди разделяются на тех, кто может постоянно переучиваться, и тех, кто начинает сдавать, не выдерживая темп. У бегунов на марафонскую дистанцию есть понятие «марафонская стена». Это эффект, который происходит где-то на 25-30 километрах. В этот момент у организма исчезает вся энергия и многие люди останавливаются, не в силах преодолеть эту «стену». Эффект во многом психологический, физиологически же организм просто переходит с расщепления гликогена на расщепление жиров. Вот в IT есть свой аналог «марафонской стены», когда человек её достигает, у него погасают глаза. Эффект тоже лишь психологический, дело не в «старости мозга». Посмотрите на учёных, мозг у них прекрасно работает до 60-90 лет, пока в целом организм не начнёт отказывать. В качестве лирического отступления о психологии профессиональных IT-специалистов. Мы с моим коллегой по старой работе, как-то решили поучаствовать в туристической прогулке на 100 км за 24 часа. Мероприятие не очень сложное, нести с собой нужно было только воду и репеллент (шли по лесу вокруг города), каждые 25 км был привал, где нас кормили и можно было сойти с дистанции. Выходишь в субботу утром, приходишь в воскресенье утром. Пошли мы без подготовки, как и многие другие. В целом, дистанция посильная для любого физически здорового человека. Только нужно психологически преодолеть себя. На 50-м километре у моего коллеги от ходьбы начало сильно болеть колено, поэтому следующие 50 километров он проделал лёгким бегом с той же скоростью, с какой я шёл. В прогулке с нами участвовал клуб альпинистов, в какой-то момент ребята начали употреблять обезболивающие. Последний из них потерялся где-то после 75-го километра. Я сам неверно подобрал обувь, пошёл без пластыря, стёр одну ногу в кровь, больно, конечно, было. Вопрос об остановиться мы как-то даже не рассматривали. До финиша дошли лишь представители туристического клуба-организатора и мы вдвоём с коллегой. В понедельник я встал (достижение) и поехал (ещё большее достижение) на работу. Коллега отработал понедельник в удалённом режиме, встать не получилось. Хотите в IT? Пробегите марафон. Именно такая психология у профессиональных «программистов». Понадобится. По правде говоря, область информационных технологий в этом не уникальна. Хорошие врачи тоже учатся целую жизнь, учёные - тоже. Я всё ещё веду научную работу (численное моделирование сопряженного свободноконвективного теплообмена), поэтому могу сказать, что в научной среде тебя всегда окружают старые люди, а в IT - молодые. Барьер один и тот же, просто в IT есть постоянный приток новых людей, а в науку - нет. Много случайных людей Скажем прямо, у IT-специалистов хорошие доходы, это привлекает в отрасль множество людей. А их всё равно не хватает. Тут бы в пору заподозрить неладное и подумать почему так, но этим обычно мало кто себя обременяет. Раньше это был поток в основном молодых людей, сейчас молодые закончились (кроме шуток, 90-е года XX века дают о себе знать), перешли на более старшие возрастные категории. Поэтому стали появляться истории про людей, которые «вошли в айти» после 40 либо даже 50 лет. Это возможно, но войти мало, нужно ещё и задержаться. Когда я ещё учился в университете, на нём была программа «Программист за 1 год». Ежегодно профессиональную переподготовку проходило множество людей, которым рассказывали азы программирования. Но рынок ими почему-то не насыщался. Люди приходили на рынок, а потом куда-то исчезали с него. Сейчас ситуация усугубилась. Появилось множество онлайн-школ, которые обещают, что через 6-9 месяцев обучения человек будет востребован в IT, после чего будет получать 100-200 тысяч рублей оклада в месяц. Их даже учат правильно составлять резюме и проходить собеседования. Как-то мне наши рекрутеры сказали, что просмотрели где-то 600 (!!) откликов на вакансию, провели несколько первичных собеседований, но до второго этапа никто не дошёл. Причина - выпускники онлайн-школ. Да, у нас несколько строже отбор, чем в крупные компании. Но сейчас 2022 год, год перемен, в который крупные компании «режут косты», то есть сокращают бюджеты на IT, причём резко и заметно. Честно говоря, в отрасли давно знают непрофильные специальности, которые легко конвертируются в IT-специалистов. Это математики, физики, радиотехники и несколько иных направлений. В основном инженерные и естественнонаучные дисциплины, где у людей развивают системное мышление. Дефициту IT-специалистов же не один десяток лет, многие варианты уже перебрали. Это новую технологию можно изучить за 1-6 месяцев, а вот системному мышлению приходится учиться 5-6 лет в университете. Быстрее не получается. И тут надо было бы спросить, а зачем отрасли столько «случайных» людей? Всё просто, для выполнения несложных работ и участия в стартапах за небольшие (сравнительно) деньги. Пока у человека ещё горят глаза и не закончился энтузиазм. Помним, что спринтерскую дистанцию каждый пробежит с первого раза, а десяток километров - нет. Есть ещё одна причина - эмоциональное выгорание, но об этом после. Область информационных технологий жестока, если нового человека хватит на 5-10 лет рядовой работы, то почему бы нет? Кстати, именно с такой частотой в IT происходят кризисы, которые подчищают рынок. Чуть более подробно этот вопрос рассмотрен в статье « Саморегуляция в ИТ: минимально допустимая эффективность работы » (на Habr её ещё не публиковал). Автоматизация Знаете, очень интересная вещь. Программисты многое делают, чтобы автоматизировать свой труд, то есть чтобы было нужно как можно меньше программистов. Хорошим примером является реализация информационных сайтов. Раньше для этого нужен был программист, а то и коллектив программистов. Нужно было вручную сделать вёрстку сайта, реализовать серверную часть, присоединить первое ко второму. Потом появились MVC-фреймворки, которые давали каркасы web-приложений. Для реализации сайта стало хватать одного «full-stack» разработчика. То есть один человек делал серверную и клиентскую часть. Затем пришли CMS (сontent management system - система управления содержимым). Для того чтобы создать сайт, не нужно было заниматься программированием, хватало конфигурирования. А под конец пришли сервисы типа  Тильды . Это конструкторы сайтов, которыми могут пользоваться непрограммисты. Например, UI/UX специалисты уже могут создавать там новые шаблонные блоки, не прибегая к помощи разработчиков. А простой сайт может сконструировать из готовых блоков любой человек. Куда делись те люди, которые ещё недавно разрабатывали сайты за 5 тысяч рублей на потоке? Правильно - были вынуждены искать новую работу. Во многом аналогичное сейчас происходит с интернет-магазинами. Это несложная шаблонная работа, которую можно автоматизировать. Кроме того, сейчас начали набирать популярность сервисы NoCode и LowCode, которые позволяют создавать несложные мобильные приложения в визуальном редакторе. Чуть поподробнее в « No-Code и Low-Code. Взгляд инженера и бизнесмена » (на Habr её не публиковал). То есть сама отрасль лишает свой хвост работы, отбрасывая его. Очень плохая идея оказаться в хвосте. Это тоже сытая жизнь, только не очень надолго. Крупные компании и устаревшие технологии Здесь есть место для конфликта интересов IT-специалистов и крупного бизнеса. Первым нужно не отстать от рынка, для этого нужно постоянно бежать. Вторым нужно сокращать свои операционные и капитальные затраты. Бизнес не заинтересован в постоянном внедрении новых технологий. Бизнес заинтересован в технологических платформах, которые будут работать 10-20 и более лет. Стоимость внедрения новых платформ - очень большая. Иногда бывают курьёзные случаи. Те, кто остаются в IT надолго, рискуют продолжить работать до самой смерти. В конце XX века всплыла « Проблема 2000 года », много программного обеспечения было неготово к работе после 2000 года. В том числе и банковского программного обеспечения, разработанного на языке Cobol. Язык создан в 1959 году, программистов на нем мало. Пришлось привлекать к разработке даже тех людей, кто на тот момент были в домах престарелых. Самое смешное, что и в 20-х годах XXI века подумывают о программистах Cobol из дома престарелых. Мне самому приходилось работать на старой и очень живучей платформе разработки систем документооборота. Шутки про Cobol у нас были скорее грустные, а не смешные. Мы понимали, что нас может ожидать. То есть работа в крупной компании либо государственном секторе может обернуться для IT-специалиста застоем в освоении новых технологий и отставанием от отрасли на 10-15 лет. Это очень большая дистанция, при этом есть риски, что одним рывком её преодолеть будет невозможно. Но это же и средство «консервации» IT-специалистов. Главное, чтобы от твоего технологического стека (набора) не отказались, когда тебе 40-50 лет. Сильные разработчики быстро переучатся на новый стек технологий, а другие уйдут с рынка. Нужно любить своё дело Невозможно выдержать длительную профессиональную гонку, когда не любишь то, чем занимаешься. Для тех людей, что представляют из себя профессиональное ядро отрасли, информационные технологии - это не только и не столько источник дохода. Это возможность самореализовываться в любимом деле. Скорее всего, у таких людей будет профильное образование, либо близкая к профильной специальность. Хорошее образование и фундаментальная подготовка позволяют человеку понимать, что развитие технологий происходит по спирали. Концептуально разницы между мейнфреймом с терминалами и тонкими клиентами с облаком не так уж и много. При достижении определённой глубины понимания отрасли, гонка технологий перестаёт быть гонкой, уходит необходимость постоянно переобучаться. Остаётся только любопытство и тяга к новым знаниями и инструментам, которые позволяют оставаться востребованным до конца своей трудовой жизни. Именно эти люди решают сложные инженерные проблемы, создают новые технологии и методологии. Их мало, но именно в их присутствии IT начинает работать эффективно и надёжно, как хорошо отлаженный механизм. Вместе с плюсами такая любовь к своему делу несет и большие риски. Если такой человек начинает заниматься никому не нужно работой, когда результатами его труда перестают пользоваться люди, наступает быстрое эмоциональное выгорание. Такие люди не смогут работать в стол. Поэтому их редко можно увидеть в стартапах. Если человек в десятый раз делает новую социальную сеть, которая никогда не запустится, не потому, что она плохо написана, а потому, что она никому не нужна, и его всё устраивает, то это явно какой-то другой человек. Профессионал, скорее, реализует конструктор социальных сетей и будет продавать его, как услугу, любителям стартапов, чтобы они могли проверять свои гипотезы самостоятельно. Конечно, иногда профессионалы участвуют в стартапах, но чаще они приходят в них, когда бизнес-идея подтвердилась и нужно строить устойчивое и гибкое технологическое основание. Все мы понимаем, что торговать своей любовью долго не получится, даже за большие деньги. Подводя итоги На рынке информационных технологий одновременно присутствуют долгоживущие профессионалы и люди, которые попали в отрасль «случайно». Плюс некоторая прослойка, которая пришла в отрасль молодой, но не выдержит длительной гонки. Если вы небольшой стартап и вам нужны люди ненадолго, то вам подойдут любые специалисты. Если вам нужны представители профессионального ядра отрасли, то внимательно посмотрите в глаза человека. Насколько они у него горят? Насколько он любит (по-настоящему) то дело, которым занимается? Как долго он сможет «бежать»? Насколько то, что вы делаете, интересно этому человеку? Ему тоже в это придётся вкладывать душу. Помните, что дело не в возрасте. Человек может состояться как профессионал и в 25-27 лет. Их просто нужно уметь отличить от тех, кто через 10 лет сойдёт с дистанции. Вообще, в области информационных технологий очень много психологии и технологий социальных. Это иная (скрытая) грань отрасли. Что до вопроса, куда исчезают программисты после 40 лет? Профессионалы остаются востребованными и после 50-60 лет. Чаще всего это люди, которые очень глубоко понимают свою область, среди них много старших разработчиков и технических лидеров. Таких людей никогда не было много, рынок ими не перенасытится никогда. Некоторое число людей отрасль отдаёт на руководящие должности. Кадровый кризис в области руководства ещё более острый, чем среди IT-специалистов. А остальные сходят с дистанции, кто-то совсем уходит из отрасли, кто-то продолжает работать в крупных и государственных организациях, выполняя несложную работу и получая оклад ниже средней по региону. То есть перестают соответствовать мифу о высокооплачиваемых и сверхвостребованных IT-специалистах, которые могут работать удаленно из любой точки мира. Если вы дочитали до конца и написанное было для вас полезным, то спасибо вам. Полезные материалы по теме: IT для неайтишников: Зачем оно нужно? IT для неайтишников: Куда исчезают программисты после 40 лет? IT для неайтишников: Срывают сроки, что делать? IT для неайтишников: Технический долг или почему теперь всё так долго? IT для неайтишников: Осторожно — JSDD (Бизнес в заложниках у IT) IT для неайтишников: Инженеры в заложниках у бизнеса Как писать код, чтобы тебя не уволили?  (про JSDD - Job Safety Driven Development)


