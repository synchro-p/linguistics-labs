Несколько месяцев назад я сменил работу. Весь процесс от принятия решения о поиске и первого интервью в первой подвернувшейся компании до принятого предложения занял 8 месяцев. Перед началом марафона я имел за душой опыт смены работы 8-летней давности, но в России. Этот рассказ о том, как мои ожидания встретились с американской действительностью. 
 
Прежде чем уйти в детали – краткий обзор меня. Я – разработчик с примерно 10-летним стажем, пишу для .NET платформы. Первые семь лет я базировался в Санкт-Петербурге и 3 года назад переехал в штаты.  
 
Итак, поехали! 
 
 Агенты 
Это первое, что бросается в глаза – агенты повсюду. Они тут уже не просто для удобства – без них вы не найдете ничего интересного, ибо многие компании публикуют свои вакансии только коrда никто долго не клюет. Задача агента – найти по селам и весям всех, кто мог бы пройти интервью, и за каждую пристроенную душу он получает процент его зарплаты. Т.е. 
 
 Знать хорошего агента – 50% успеха, может и больше. Каждый из них работает с определенной группой компаний, и очень может оказаться так, что ваш агент просто физически не может ничего интересного вам предложить. 
 Ваша потенциальная способность пройти интервью делает вас очень и очень привлекательным в глазах агентов. Другое дело, что такая любовь обычно остывает до абсолютного нуля после первого непройденного интерьвью. 
 Ваше персональное счастье, интересы, перспективы и пр. – заботит только вас. Если бы агент мог продать вас на галеры, он бы это сделал. 
 Хотя большинство агентов специализируются на найме сотрудников для определенной области и знают какой-никакой лексикон, встречаются и залетные перцы. Просто будте готовы ответить, программируете ли вы на XML. 
 
К примеру, однажды мне позвонил чувак из калифорнии и долго уговаривал рассмотреть opportunity от какой-то медийной компании. Его не останавливало, что я даже не слышал ни об одном из keywords, которые он мне перечислял. Как потом выяснилось, ему был нужен сисадмин. 
 
Большое исключение – вы точно знаете, в какую компанию хотите попасть и просто шлете им свое резюме. Такое отлично работает для больших компаний типа Microsoft, Google, etc. 
 
 Нью-Йорк и городок в 50 милях к северу от него – это две большие разницы 
Это же очевидно, не так ли? Но вот, предположим, вам предлагают съездить на ни к чему не обязывающее интервью в красивое местечко рядом с национальным парком – чего вы будете ожидать? Красивую природу и меньше пафоса? И будете не правы, ибо не учитываете образ жизни знаменитой «одноэтажной» Америки. 
 
Дело тут вот в чем. Если в большом городе на каждую вакансию выстраивается очередь специалистов-конкурентов, то в сельской местности кто есть незанятый и живущий неподалеку – тот и будет работать. При этом все, кто могли прилично девелопить, скорее всего нашли работу в городе. 
 
Вот пример: я поехал на собеседование просто потренироваться, потому был рассаблен и спокоен. Шоу началось с приятного разговора с прожект-менеджером. Мы поболтали о том о сем, он периодичекси вставлял технические вопросы типа «кстати, а что такое X» и пр., и затем передал меня SQL-гуру. Я соскреб ржавчину со своих знаний и выдал ему решение, которое не факт что что-то решало. Но проверить это оказалось не так просто, потому через 20 минут мы просто договорились, что рабочие решения точно есть и расстались друзьями. Следующее интервью было посвященно алгоритмам, и тут стали происходить странные вещи. Мой код для DFS был назван «лучшей имплементацией этого алгоритма, которую я видел на интервью». Ок, подумал я, ты так, наверное, шутишь. Пара следующих ответов была удостоенна примерно таких же эпитетов, потом одно из решений было признано как «это лучше чем ответ, который я имел в виду». После того как он спросил все, что хотел, и я спросил все что мог, он ненавязчиво так сказал: «ну типа, пойми меня правильно, я бы с тобой конечно хотел поработать, но ты уверен что тебе не будет тут скучно?». Примерно в этот момент я понял что, что-то идет не так, сильно не так – ибо это я как собеседуемый должен изо всех сил показывать как я excited и все такое. Мы еще пообщались, и он позвал прожект менеджера, который сразу с порога сказал: «ты не обижайся если я слишком прямо спрашиваю, но как ты работаешь с людьми в команде, которые не такие умные как ты?». Дааа, я желаю каждому разработчику услышать такой вопрос на интервью разок, просто чтобы потом посмеяться над своим ответом. Мой был «до сих пор проблем не возникало».  
 
После интервью я позвонил агенту и сказал, что вакансия мне не интересна. Он сначала возмутился, но потом вроде понял почему. Ну и чудно, подумал я, чао. Неа. На следующий день агент позвонил опять – ему позвонил мой менеджер, который, по его собственным словам, не спал всю ночь, и хотел еще раз попытаться уговорить меня. Нет нет нет, спасибо. 
 
 Интервью – форма искусства 
… и относиться к нему надо соответствующе. Выучить ритуалы, вылизать резюме, давать выверенные ответы на стандартные вопросы, спрашивать когда спрашивают и не умничать. Я упустил свое самое выгодное с финансовой точки зрения opportunity из-за того что честно ответил на вопрос «почему хотите сменить работу». Другой чувак успешно прошел 6-часовое интервью, расслабился, и решил пошутить: «надо же, ни у кого фейсбук не открыт на рабочем месте. Как же вы тут расслабляетесь?», после чего был послан домой. Молодец, вырвал поражение из пасти победы. 
 
 Человеческий фактор 
Дело в том, что собеседовать вас будут обычные люди. Многие из них взяли свои вопросы из интернета. Мало кто из них спрашивал себя, как их вопросы могут помочь в поиске. Не все из них видели ваше резюме, и не факт, что вы вообще подходите под описание. Но знаете что? Это Нью-Йорк, детка, и это большой инвестиционной банк. На каждую вакансию тут десятки (может и сотни) желающих. Им есть из кого выбирать. Несколько историй: 
 
 Самое первое интервью, на которое я сходил, было полным фиаско. Я думал что приду, все удивятся моей крутости, и тут же сделают предложение. На деле же получилось так: индус, собеседовавший меня, спросил что-то простое про LINQ. Я ответил. Глаза индуса стали стекленеть, он сказал: «Это не будет работать» — «Почему?» — 10 секунд паузы — «хм… а что это вообще такое?» — «LINQ query» — «хм… нет, я не знаю о чем вы, но это не будет работать» — «вы уверены? Последний раз у меня такое работало не далее как вчера» — «Да? Ну а вот это что такое?» — «Это коллекция» — «нет, не будет работать». Как я думаю сейчас, индус знал только о sql-подобном синтаксисе и не ведал о методах типа GroupBy, Select, и пр. Бывает. 
 На одном интервью меня спросили: «Если вы напишите один return в try блоке, и один в finally блоке – кто победит?». А я не знал. Мне было стыдно. Но я ни разу за 10 лет такого не написал. Потому что такой код – очевидно плохой. Вот если бы я так писал, то знал бы, что компилятор сказал бы мне «давай-ка ты исправишь свою писанину, дружок». Я не прошел то интервью. Наверное, наняли умельца, который был знаком с этим сообщением компилятора. 
 Очень, очень часто люди спрашивают о том, с чем боролись в последнее время, или то, в чем они специализируются, даже если это не имеет отношения к вакансии, и никак не способно отсеять мух от котлет. К этому невозможно подготовиться. Просто смиритесь. 
 Ну и последняя история из этой серии. На одном интервью очередной индус спрашивает меня – а чего это у тебя в резюме столько технологий упоминается? Я и давай ему рассказывать – что, почему, где да как. И тут он мне как заявит – «не люблю я все эти ваши новые технологии, одни беды от них. У меня в команде ничего такого не используют». Удивительно, но интервью я прошел, хотя и решил дальше не продолжать. 
 
 
 Tips: 
 
 Если кто-то уже заслал ваше резюме в какую-то компанию, и тут другой агент предлагают такую же вакансию – вежливо скажите нет. Я однажды сказал второму – «не проблема, засылай!», и потом имел очень неприятный разговор когда он узнал о первом агенте. Ну и шансы на интервью тут же падают до нуля. 
 Вопросы «почему хотите сменить работу» и «почему наша компания» — сакральны. Очень помогает верить в свои ответы. 
 Записи – кто что спросил, что я ответил – очень помогают не делать одних и тех же ошибок и шлифовать ответы. 
 Больше тренируйтесь. 



