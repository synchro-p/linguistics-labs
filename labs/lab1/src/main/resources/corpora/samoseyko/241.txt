Пока все кому не лень пишут статьи о том, как войти в айти, некоторые из нас нет-нет, да задумываются, а не выйти ли оттуда. Ночные релизы, бесконечные переработки, легаси код, невнятные баги, грубые разговоры в курилках и в коридорах, постоянные требования от менее технически подкованных коллег, иногда целые блоки кода, а то и сборки, отправленные в корзину… Выгорание? Жажда новой жизни? А вдруг там, за дверью серверной или опенспейса R&D, всё по-другому?  Disclaimer.   Статья написана сотрудником RegionSoft в рамках рубрики «Свободный микрофон», она не рецензировалась. Мнение компании может совпадать, а может не совпадать с мнением автора статьи. Так-то мы делаем классную  CRM-систему ,  сервис для геолокации сотрудников  и вообще интересный бизнес-софт. Но и о вечном поболтать не прочь. ИТ, я перегораю от любви к тебе Так сложилась моя карьера, что уже 14 лет я в ИТ-сфере, на этом пути приходилось быть инженером, тестировщиком, программистом (не разработчиком!), техническим писателем и копирайтером, маркетологом и продакт менеджером — иногда последовательно, но чаще параллельно. Погружение в ИТ-сферу, работа со многими командами, активная жизнь внутри городского ИТ-сообщества позволили мне найти точки, из-за которых что у меня, что у других ИТ-шников периодически возникает желание всё бросить и начать  выпиливать разделочные доски и кроить ремни  жить заново, в какой-то другой сфере и среде, используя свой высокий потенциал для более простых и спокойных (иллюзорно?) задач.  А что не так? Расскажу в рандомном порядке, без разделения по значимости. Непрерывный стресс Работа в ИТ — это стресс. Прежде всего потому что ты должен делать свою работу максимально быстро и точно, машина, с которой ты в связке, не потерпит «примерно» и «что-то вроде», она просто не выполнит код, цель будет не достигнута. Ты должен заботиться о том, чтобы твоя работа была максимально безошибочной, чтобы изменения в одном блоке кода или модуле не тащили за собой 38 багов в других разделах. Чем больше команда, тем сильнее стресс: ты отвечаешь за работу не один, твой код должен идеально мёржиться и не доставлять проблем всем.  Стресс в ИТ преследует тебя всюду, и почти нет способа от него избавиться. Чем выше ты поднимаешься по карьерной лестнице (которая порой в нашей сфере выглядит как расширение полномочий и ответственности), тем больше стрессовых моментов и ситуаций. Особенно остро это ощущается в инженерных компаниях, в разработке приложений для В2С и в В2G (врагу не пожелаешь). Если у тебя в характере отсыпано много совести, ответственности и перфекционизма, есть все шансы лет за пять узнать, что такое нервный тик и  невроз.  Чужой проект, который стал родным К проекту в ИТ быстро прирастаешь — ты работаешь с ним, в нём, развиваешь его, пишешь документацию или готовишь аналитику, — не важно, что ты делаешь. Ты вкладываешь в него свои знания, свой опыт, постоянно думаешь, что можно сделать лучше и как обеспечить жизнеспособность этого проекта. Тебе становятся родными и код, и интерфейс, и система контроля версий, и сам дух проекта, то есть его предназначение для людей. Это невероятный, опьяняющий восторг, когда чем-то, к чему ты имеешь отношение, пользуются люди и компании. Фактически ты создаёшь новую реальность. Но есть одно «но». Это не твой проект. Ты — всего лишь наёмный сотрудник, который на каком-то отрезке времени вкладывается в общее дело. И, уходя с проекта или из компании, ты с горечью и тревогой передаёшь сделанное другому разработчику. Кажется, что он всё провалит и испортит (увы, иногда не кажется). Но незаменимых нет (как же надоела эта легаси-фраза!), и ты идёшь дальше, оставив частицу себя. Лирика? Вполне. Но именно вот это внезапное нежелание принять, что ты всего лишь наёмник на чужом проекте, нередко приводит к непониманию и конфликтам с коллегами и руководителем, когда тебе кажется, что ты точно сделаешь лучше, но другим это либо не нужно, либо не кажется правильным. Зыбкий успех Каким бы классным профессионалом ты ни был, успех в ИТ — чрезвычайно зыбкая штука. Ты можешь пожертвовать компании 10 или 20 лет жизни, отдать часть души, болеть за дело, но как только появится эффективный разработчик, способный делать вашу работу быстрее, лучше, автоматизированнее, ты начнёшь стремительно девальвировать. Чтобы держать марку, нужно приложить не только профессиональные усилия, но и развивать пресловутые софт скилы, уметь не просто делать, но и показывать, по сути непрерывно продавать себя своему работодателю. Иногда от этого бывает душно. Не исключено, что такой расклад одна из движущих сил в ИТ: постоянно конкурирующие специалисты двигаются вперёд вместе с проектом. Или выгорают от этих странных требований преследовать амбициозные цели.  В то же время юное поколение айтишников и околоайтишных менеджеров не радует. В них «пропал дух авантюризма», нет желания отдавать всего себя работе и проектам. Эти ребята очень жёстко охраняют своё рабочее время и могут легко написать на тебя жалобу, если ты попросишь их задержаться на пару часов или позвонишь во время отпуска (и их нельзя за это осудить). Хуже другое — любую критику, любое замечание или предложение переделать, попробовать новые решения они воспринимают как проявление токсичности, впадают в невроз и всеми силами скидывают с себя ваше намерение. Я не знаю, где они добывают этот волшебный укол вымученного позитива, но иногда хочется напомнить, что вечный принудительный оптимизм — шаг в бездну безумия, коммуникации и отношения должны быть разными. А так — неуютно с ними, чувствуешь себя сумрачной сволочью в царстве эльфов. Работа 24/7 даже если 8/5 На одном из собеседований меня спросили: «Как вы относитесь к переработкам? К сожалению, они у нас есть и, возможно, 2-3 раза в месяц придётся задерживаться». Для меня этот вопрос был странным, особенно для чисто айтишной компании (продуктовая b2c), потому что почти везде сотрудники перерабатывают, делают что-то из дома или хотя бы непрерывно обдумывают, что можно сделать для текущего проекта. И это не значит, что мы все такие герои, а остальные не д’артаньяны. Просто мозг, загруженный напряжённой интеллектуальной работой, не может остановиться ровно в 18:00 и переключиться на размышления о жареной картошке на ужин. К тому же, что уж лукавить, для части работников ИТ-сферы работа — это основное занятие в жизни, своеобразный уход от реальности, удобный способ обосновать социальную пассивность («Я с утра до ночи делаю приложение для людей, отвалите все»). Руководители без технического бэкграунда Если ты не попал в чистую разработку (продуктовую компанию), то с руководителем или менеджером проекта может сильно не повезти — это будут далёкие от ИТ люди, которые с уверенностью готовы тобой управлять. Они будут нести технические задания от клиентов, не верифицируя их и не проверяя на адекватность, их указания будут похожи на указания золотой рыбке или джину: примени свой программерскую магию и запили нам складской учёт на коленке, желательно за ночь. Такие коллеги и руководители — настоящее стихийное бедствие, потому что с ними невозможно ни планировать, ни разбирать бэклог, ни договариваться об этапах разработки. У них своё мнение о процессе проектирования и программирования, которое обычно сводится к чему-то такому: вот эти чуваки просто быстро стучат по клавишам, зная, на каком языке обратиться к железкам. Зато тебя запросто утопят в совещаниях, митингах, смене методологий управления разработкой, презентациях и майнд-картах. Если ты не впечатлишься, непременно добьют OKR или KPI, ведь это они эффективные управленцы и движки этого мира. Иногда руководители просто не понимают твою работу. Они думают, что ты обязан программировать, тестировать, поддерживать рабочее окружение и работать с клиентами — желательно в рамках крошечного бюджета. А ещё у некоторых руководителей встречается потрясающая дихотомия: если ты работаешь хорошо и всё в порядке, то зачем ты нужен; а если что-то не работает, зачем тебя нанимали. В общем, как ни крути, не угодишь. Такое непонимание со стороны руководства может сделать работу невозможной. К счастью, этот феномен в ИТ-компаниях теряет свою силу, но пока ещё держится. Люди, которые знают, как лучше и как надо Клиенты, заказчики, внутренние клиенты (то бишь твои коллеги) — они все знают, как надо и как лучше и искренне не понимают, почему ты это ещё не сделал. Почему Wi-Fi по паролю, почему принтер сообщает, кто сколько рефератов распечатал, почему программа сама не шлёт письма, почему антивирус блокировал закачку с сайта, почему босс видит историю посещений, почему не работает интеграция с телефонией, которую попросили сделать вчера в 17:58?! Бесконечные вопросы, запросы, тикеты со странным содержанием постоянно требуют внимания, раздрабливают задачи и рабочий день на кучу дискретных подходов к основному, важному занятию. А ещё все врут. Пользователи и клиенты ничего не делали, оно само. Руководитель непременно даст бюджет, только срочно собери требования и составь техническое задание. Твои коллеги и напарники на мемчики смотрели, у них IDE заглючила. Каждый стремится показать себя в выигрышном свете, боится показаться глупым и от этого врёт ещё больше. В итоге ты устаёшь ещё на этапе сбора подробностей о запросе или инциденте. ИТ стремительно устаревает Вместе с тобой. Стек, который был актуален лет 5-7 назад, сейчас уже мало чего стоит. Постоянно появляются новые парадигмы, языки программирования, фреймворки, библиотеки и т.д. Если ты самостоятельно не обучаешься, можно быстро выпасть из обоймы. В то время как конкуренция на рынке только ожесточается и на место одного разработчика претендует прокачанные, владеющие актуальными технологиями молодые специалисты (та же история в DevOps, системном администрировании, тестировании и т.д.). И нет, рынок не слаб: полно бестолковой молодёжи, но и сильных специалистов с опытом работы хватает. Золотое Эльдорадо безграничных зарплат всё больше отступает, ИТ становится скорее рутиной, чем строительством будущего. Увы, некоторые ИТ-специальности и должности тоже трансформируются, видоизменяются и уходят в облако, аутсорсинг, задачи из серии М2М. Сложные системы выходят на новый уровень автоматизации и тем самым сокращают потребность в инженерах и разработчиках. Поэтому нужно быть гибким и обучаемым, чтобы легко менять свой профиль внутри отрасли. И вроде бы — что плохого в непрерывном обучении и развитии для человека с интеллектом? Но обучение и самообразование выходит за границы рабочего дня и ты, чтобы оставаться тем же крутым профессионалом, вечерами пилишь свой пет-проект, ковыряя новинки Go, Java, JS (или что ты там предпочитаешь) и попутно изучая что-то совершенно новое, чтобы привнести это в рабочий проект, развивать его, делать максимально конкурентным. А это ещё один повод присмотреться к венерианским суткам, они больше подходят для качественного айтишника. Бюрократия пришла в ИТ Пожалуй, это один из самых неприятных факторов. ИТ сама по себе довольно стандартизированная отрасль — мы все работаем с регламентами, документацией, code style, мануалами, тестпланами и т.д. Без порядка в знаниях и правилах в разработке никуда. Но, конечно, этого было мало. Внутри ИТ-сферы появилось много менеджеров по развитию, качеству, стратегии, тактике, философии и хренологии. Им всем нужно и важно показать свою значимость, продемонстрировать нужность. А как это сделать, если ты ничего не разрабатываешь и даже не управляешь разработкой и созданием продукта и его ценности? Правильно, внедрить регламенты, правила, отчёты, таблицы, оценки и т.д. Оттуда и появляются такие документы как регламент взаимодействия отдела разработки и отдела продаж, правила посещения столовой, регламент проведения еженедельного митапа (даже если нет времени и темы!), инструкция по поведению в офисе, рекомендации по межличностному взаимодействию и т.д. Менеджеры такого рода думают, что они наводят порядок, а на самом деле разобщают коллектив — и вот уже в компании из трёх человек ты не подходишь к своему коллеге и не просишь о помощи, а ставишь ему задачу во внутренней системе. Сам ты, кстати, тоже без тикета ничего не делаешь — а то мало ли что в конце полугодия стрельнет в голову очередной эффективной единице. Если тотальное регламентирование и бюрократия получают одобрение руководства, ты обнаруживаешь, что перестал успевать делать даже базовые задачи, потому что кроме всего прочего ваша компания погрязла в совещаниях и встречах, без них не решается ничего. А значит, как снежный ком продолжают расти технический долг и сверхурочная работа. Шутка про венерианские сутки перестаёт быть глупой и превращается в мечту. HR бывают не в себе Вот тут мне везло как никому — 90% HR-ов на моём пути были отличными и (неужели так бывает?) с техническим образованием. Они не просто подбирали удачных кандидатов и формировали неплохой штат разработки, но развивали персонал внутри рабочего периода с помощью реальной поддержки, адаптации, релокации и горизонтального перемещения. Но это не значит, что я не ходил по собеседованиям. А там я слышал и видел всё: собеседование с имитацией очень плохого английского, отказы по причине «вы оверквалифайд» (это вообще что, простите?), ошибки в описании стека (и в его обсуждении — ну не лезь, если не вывозишь…), золотые горы мерча, лишь бы не дать оклад побольше (одна девушка-HR полчаса описывала состав welcome-пака и старательно огибала вопрос вознаграждения). Эти же HR отнимают много времени на квазикорпоративную культуру, анкетирование, анализ психологического климата коллектива. Со стороны это звучит прикольно, но внутри всё не так радужно: большинство сотрудников продолжают дружно врать в тестах и анкетах, сводя к нулю все усилия. И это не просто потеря времени, это фактор демотивации — ты не чувствуешь себя защищённым, ты просто элемент корпоративной культуры. Есть подозрение, что это так не работает. Здоровье под угрозой Это фактор, о котором не думаешь, пока он не подойдёт к тебе вплотную. Сидячая работа, напряжённый умственный труд, неправильная поза, работа в помещении — всё это факторы, вызывающие различные проблемы в организме. Если к этому прибавить чуть меньше силы воли, неправильное питание и нездоровые перекусы, неудобную и неэргономичную мебель, вредные привычки и нежелание выходить из дома, то всё, год-два — и ты узнаешь, что такое отёки, лишний вес, больные суставы, сухая кожа, туннельный синдром, при «особом везении» познакомишься с заболеваниями ЖКТ, одышкой, сонливостью, болью в пояснице. При очень неблагоприятном стечении обстоятельств и особенностей организма раньше времени можно начать гуглить гипертонию, сахарный диабет, артрит. Иногда на себя не хватает времени совсем, а если и хватает, то высокий уровень стресса непрерывно сводит часть заботы о здоровье на нет. И даже ДМС совсем не спасает ситуацию. А честно говоря, в малом и среднем бизнесе и руководителям не легче. Как же реальность контрастирует с мыльными операми и тру-офис-сериалами, где бизнесмены ломают голову лишь о том, куда потратить деньги, а главный человек в компании это секретарша-любовница! И что? И вот ты уходишь из айти. Кто ты? Куда податься? Можно в маркетинг и продажи — ты идеально знаешь продукт и проблемы пользователей изнутри; или в менеджеры проекта — нести галлюцинации клиента как свет и истину своим бывшим коллегам; или переучиться на переводчика и копирайтера — смотреть в руки заказчикам и принимать раунды правок, ведь в тексте, в отличие от кода и архитектуры, разбираются все; а то и вовсе в автомастерскую или в дилерский центр — отвечать на странные вопросы и оправдываться, что вы не ставите палёные и бэушные детали на 15-летний Ford Focus клиента.  Позади осталось айти… Остались твои коллеги — изумительные увлечённые профессионалы, готовые ругаться и спорить за каждую строчку кода, перфекционисты и изобретатели; осталась возможность расти и менять направление развития; ушли в сторону удалённая работа практически без границ и гибкий офисный график; испарилась уверенность в завтрашнем дне и в будущем, точно зависящем от тебя; стало далёким потрясающее, умное, компетентное и отзывчивое мировое ИТ-сообщество; забылись шутки, смешные аргументы горячих споров разработчиков; нет больше гордо-заносчивого и одновременно такого значимого «я — часть ИТ»…  Успокойся. Проснись. Ты всё ещё здесь. Оставайся. 


