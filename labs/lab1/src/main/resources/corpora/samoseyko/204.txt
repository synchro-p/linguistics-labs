Управлять программистами в ИТ-компании – дело особое. Не сказать, что сильно сложное. Совру, если назову простым. Особое. Книжек, статей, курсов создано великое множество. Что-то помогает, у кого-то получилось. Собственно, промахнуться с оценкой сложно – отрасль ведь не просто существует, но и весьма активно развивается. Даже в нашей деревне. Значит, как-то, кое-как, с горем пополам, но управление программистами не только возможно, но и получается. Однако, кризисы случаются. Бывает, что затяжные – например, какая-нибудь серьёзная деревенская компания не может ни найти, ни воспитать приличного руководителя программистов. Благо, сейчас это не великая проблема – бизнес вполне себе растёт лишь потому, что растёт рынок, и заполнить его некому. Поэтому за начальника сойдёт и табуретка. Но – лишь до поры, до времени. Регулярно ИТ-бизнес думает-думает, решает-решает, плюнет, да и снова попробует старый добрый метод: нанять успешного руководителя из другой сферы. Производство, строительство, торговля – не суть. Оттуда много кандидатов, у них подтверждённый опыт, зачастую – MBA, и они такие прям чёткие всегда! Знают, чего хотят, на что способны, чего им нужно. Мне этих руководителей всегда искренне жаль – я знаю, что их ждёт, каков будет их путь, почему они в итоге уволятся. Я не семи пядей во лбу, просто в течение многих лет наблюдал их в обеих сферах – ИТ и той, из которой они пришли, где добились успеха. Могу плюс/минус сопоставить контексты, работающий инструментарий, важные и второстепенные личностные качества. Много раз пытался объяснить, помочь – и начинающим руководителям-варягам, и тем, кто их тащит в ИТ. Никто, разумеется, не слушал. Ну да я уже привык, поэтому сижу себе помалкиваю. Однако, тут такая история вышла: в ИТ-компанию собралась устроиться некто Ира, хорошая знакомая моего хорошего знакомого. Он, как мог, пытался её отговорить, но не преуспел, т.к. сам работает программистом, и руководителем никогда не был. Попросил меня. Я предложил формат статьи – и моё мнение услышит, и ваше. В конце концов, вполне возможно, я не прав, как это обычно случается (если верить вашим комментариям). Итак, погнали. Буду писать, как бы лично обращаясь к Ирине. Кто ты? Привет, Ира. Я примерно знаю, кто ты в плане работы – наш общий знакомый рассказал. Я очень хорошо знаю три из четырёх предприятий, где ты работала руководителем – город у нас маленький. Стиль управления, который там в ходу и делает человеку успех, мне хорошо знаком. Чтобы ребятам, читающим текст, было понятно, я скажу: ты работала руководителем службы снабжения производственного предприятия, чуть раньше начальствовала над экономистами в компании, специализирующейся на кооперации, ещё рулила сервисной службой производителя промышленного оборудования, ну и был опыт построения службы менеджмента качества – с неё началась твоя карьера. Тебе везде сопутствовал успех. Нет: ты создавала успех сама, максимально чётко соответствуя требованиям и настроениям контекста. Однако, в ИТ тебя действительно ждут проблемы. В части управления тут всё немного иначе. Перечислю основные трудности, с которыми ты столкнёшься. Подчинение Там, где ты работала – руководителем среднего звена на, скажем так, «обычных» предприятиях – с подчинением проблем, по большей части, не было. Разумеется, встречаются иногда перцы, которые увлекаются саботажем или «итальяночкой», но именно иногда. В основном «подчинение», как актив, принцип, фора - у тебя было. Управляя людьми, придумывая изменения, определяя правила, очерчивая границы, ты опиралась на подчинение. Ты, пожалуйста, сейчас не бросай читать, а вдумайся в эти слова. Люди тебе подчинялись. Ты настолько к этому привыкла, что давно перестала замечать. Наверное, проблема подчинения у тебя возникала в первые дни или недели работы в новой должности или компании. Но ты знала, как её решить. Например, в мягкой или жёсткой форме обозначив: кто не подчиняется – работать здесь не будет. Мы все прекрасно понимаем, что линейный персонал в отдел закупок, экономики или службы менеджмента качества найти – не великая проблема, поэтому риск оправдан. Равно как мы знаем, что в подавляющем большинстве случаев никто не бежит из отдела при появлении нового руководителя – сначала присмотрятся, приценятся. Вдруг просто границы обозначает, а то и сам сольётся. Это игра такая, кто страшнее зарычит. Так вот, в ИТ про подчинение забудь. По крайней мере, управляя программистами. Никто не будет тебе подчиняться лишь потому, что ты – начальник. Тут всё гибко, зыбко и неопределённо. Ситуация, когда толковый программист ценится компанией выше, чем его начальник – рядовая, а не из ряда вон. Причём, я говорю и о денежной, и о стратегической ценности. Иногда будет казаться, что тебя наняли гувернанткой к капризному барчуку. Это не обманчивое впечатление. Да, иногда надо проявлять строгость – но очень и очень ограниченную по твёрдости и возможным негативным последствиям. И ты, и программист будут понимать: твоя строгость – показная, не настоящая. Игра такая. Я поставил подчинение на первое место, потому что, по моим личным наблюдениям, это главное отличие управления в ИТ и «во всём мире». Ты наверняка читала книги по менеджменту, особенно классическому, и не могла не заметить, что тема подчинения там… Практически не затрагивается. Более или менее ей уделяют внимание в книгах по лидерству, но в несколько ином ключе – как вдохновить и повести за собой. Это уже тема мотивации, ниже про неё напишу. Так вот, приходя в ИТ, готовься управлять, не приказывая. Учись – так быстро, как сможешь – мягким методам управления. Жёсткими ты добьёшься только одного – быстрого выхода на рынок труда. Хотя, если ты уже трудоустроилась, возможно, это будет неплохой выход – вроде как ты и не виновата будешь, если тебе предложат уйти из-за излишней строгости. Авторитет Наверное, как-то уныло и безрадостно прозвучало, про подчинение-то… На самом деле, получить в свои руки высокую управляемость можно, но этот путь тебе вряд ли подойдёт – надо стать авторитетом среди программистов. Полагаю, таких планов у тебя нет, ибо понадобятся годы обучения. Принципиально есть два варианта обретения авторитета. Первый, основной, наиболее надёжный, как написано выше – стать профессионалом в программировании. Стезя у нас сложная, интеллектуальная, постоянно меняющаяся в плане технологий и подходов, поэтому уважение, в первую очередь, базируется именно на профессиональных качествах. Знаю, на «обычных» предприятиях можно стать авторитетом другими способами. Например, знакомством с директором или его секретаршей, умением продвигаться по карьерной лестнице с опережением естественного хода событий, способностью договариваться со смежными службами и т.п. У нас, в ИТ, всё это тоже имеет значение, но не для программистов, а для твоих потенциальных коллег – руководителей. Второй принципиальный путь завоевания авторитета, который пока ещё востребован в провинции – «руководитель-отец» или «руководитель-мать». Умение создавать комфортную, защищённую среду для программистов. В принципе, прочитав пару книг, ты сможешь переупаковать и продать этот навык, как «опыт фасилитации», «работу скрам-мастером, защищающим команду». Почему в провинции – тут до сих пор есть от кого защищать программистов. В том числе – от вышестоящего начальства, которое иногда ещё мыслит старыми стереотипами, считая себя чуть ли не меценатом, благодетелем. Ну и пользуются тем, что многие программисты не могут, не хотят, или пока просто не решаются уехать или перейти на удалёнку. Найдёшь таких, будешь их защищать – можешь стать авторитетом. Правда, получишь ложку дерьма в карму – пока ты их защищаешь, они будут под этими «меценатами» работать, просто под зонтиком. Мотивация Запомни, пожалуйста, одно слово: «интересно». Это – главный мотиватор программиста, начиная с определённого момента развития, когда достигнуты два важных порога – «начало получаться» и «денег хватает». Программисту должно быть интересно – язык программирования, фреймворк, проект, клиент, команда, офис, удалёнка. Ты, в конце концов. Разумеется, остальное тоже важно. Ну, или, как минимум, имеет значение. Но – именно «тоже». Многие совершают ошибку – начинают с этих «тоже», когда не получается сделать «интересно». Да что уж греха таить – когда даже понять это самое «интересно» не выходит. А потом удивляются, чего программисты бегут без видимой причины. Раньше ты имела дело совсем с другой мотивацией. Ключевое, пожалуй, отличие: программистам нравится дело, которым они занимаются. Не работа – компания, должность, проекты – хотя это тоже важно (ох уж это «тоже»). Именно дело – программирование, разработка, проектирование, отладка, ковыряние, запуск и прочие слова (их сейчас много придумали). Предположу, что не ошибусь: на прошлых работах твоим подчинённым была интересна, скорее, работа, а не дело. Ничего не поделаешь – мало на свете увлечённых менеджеров по закупкам, экономистов, оформителей процессов по ИСО 9001. Поэтому основным инструментом, или объектом воздействия для создания и поддержания должной мотивации для тебя была работа, как место, а не как дело. Для твоих «бывших» всё, что их окружает в офисе – люди, стены, столовая, корпоративы, кофемашина – были своего рода анестезией от дела. Ну, чтобы легче заходило и делалось, безболезненно, как по маслу. С программистами иначе: всё это не должно мешать делу. Если ещё и поможет – прекрасно. Не пытайся заменить «интересно» деньгами. Очень, очень многие твои предшественники на этом погорели, пытаясь предстать перед вышестоящими в выгодном свете. Например, ввязываясь в работу с Крупными Холдингами, где Много Денег. Там не интересно. Демотивация Знаю, ещё пользуетесь – там, на «настоящих» предприятиях. Штрафы за опоздания, просрочку задач, лишение премии службы качества за невыполнение плана продаж коммерческим отделом, порицания за дресс-код, невежливость, «не так посмотрела» и т.д. Так вот – забудь. Нельзя. Табу. В первые три месяца, а то и полгода – вообще никакой демотивации, пока не освоишься, не станешь хоть немного своей. Потом можешь мягко, нежно, заниматься самой лайтовой демотивацией – лишением мотивации. Да, ты уже поняла – пересаживанием человека на время с «интересного» на «неинтересное». Только на время, заранее плюс/минус известное. Или с понятными критериями возврата в «интересное». Планирование Там, где ты работала, можно было довольно точно прогнозировать и планировать работу людей. Причина очень простая – была достаточно точно известна скорость выполнения тех или иных действий, операций, поручений. Не настолько, как у станков, но с вполне адекватной погрешностью. Дело в повторяемости задач – так или иначе, но твои сотрудники делали примерно одно и то же. Оформляли документы – с известной скоростью печати, заказывали материалы у поставщиков – с понятной интенсивностью работы в КИС и документооборота с контрагентом, готовили отчёты – одни и те же каждый месяц. У программистов всё иначе. Повторяемости мало. Если повезёт, можешь наткнуться на какой-то ИТ-конвейер – таких сейчас, в общем-то, достаточно много развелось. Что-нибудь вроде автоматизации мелкой розницы, установки 1С:Бухгалтерии или запуска типовых продуктов Битрикса. В принципе, всё это тоже считается ИТ, но там нет или почти нет программистов – именно на конвейере. Рядом, в соседней комнате, программисты вполне могут обнаружиться, но там повторяемости не увидишь. Оно не страшно – просто не трать время на попытки создать и запустить какое-либо точное планирование. Изучи методы приближённого планирования, их не очень много – почитай скрам и ТОС. Остальное, так или иначе – производные. Стоит ли? Я не пытался тебя отговорить, или создать видимость чрезвычайной сложности управления в ИТ. Наверное, суть и цель моего послания ровно такая же, как в аналогичных статьях для тех, кто хочет «войти в ИТ», но как программист. Тут интересно, прикольно, классно. Но: иначе. Это надо понимать, принимать, и не формировать в душе ожиданий. В твоём случае это будет сложнее, чем для программистов, потому что ты искренне считаешь, что просто меняешь объект управления, а субъект – тебя, Иру – существенно корректировать не надо. Ты идёшь, увешанная с ног до головы медалями прошлых достижений. На входе в ИТ придётся переодеться. P.S. Но результат того стоит. Если будешь воспринимать своё турне по управлению в ИТ не как необъяснимые трудности, провал или «сраные тупые ленивые хипстеры», а как полезный, другой опыт. Другую, незнакомую, непонятную, но очень увлекательную культуру управления в мире, которым увлечён весь мир.


