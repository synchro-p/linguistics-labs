Когда вы слышите словосочетание «младший разработчик», то наверняка представляете молодого парня на последних курсах вуза или недавнего выпускника — но уж никак не 30-летнюю женщину с маленьким ребёнком, которая до этого несколько лет преподавала в вузе и от разработки была так же далека, как Майя Плисецкая от тяжёлой атлетики. Только ленивый не задавал мне вопросы: «Почему ушла с позиции доцента на младшего разработчика?», «А как ты училась программировать?», «Как искала работу?», «С чего вдруг ты вообще решила стать программистом?» и т.д. и т.п. 
 
Вот на них я и попытаюсь ответить в этом посте. 
 
 
 
ИТ-мир чарующе прекрасен. Часто это хорошие условия работы, интересные проекты, возможность удаленной работы, соцпакет, friendly офисы с теннисными столами, Xbox… да кому я рассказываю — вы и так все знаете:). В момент резкого скачка доллара и евро интернет просто кишел мемчиками: «Ищу симпатичного программиста, получающего в евро». — «Ты курс видела? Симпатичного не обязательно!»))  
 
Если у вас прекрасная карьера, которая вас устраивает — отлично! Но если вы думаете, что надо решительно что-то менять и вас, как и меня, манит разработка, перейти к тем самым «решительным действиям» бывает очень непросто. Особенно когда возраст давно перевалил за 18 и вы не то что не заканчивали вуз по специальности программирование, но и вообще с трудом вспоминаете, в каком же году его закончили… В голове то и дело маячит что-то типа «ну это только для очень умных», «это только для мальчиков», «в 28–30 как-то поздно начинать программировать», «это уже не моя сказка»… 
 
 С чего все началось? 
Наворачивая очередной круг с детской коляской в небольшом скверике около метро и параллельно думая о смысле жизни, вселенной и вообще, я неожиданно для себя поняла, что не хочу, совсем не хочу возвращаться на свою работу… Не то чтобы работа в вузе мне совсем не нравилась — в ней, как и в любой работе, есть свои плюсы и минусы. Но всегда присутствовала мысль, что это не мое. Да, мне нравилось читать лекции, но не настолько, чтобы зарабатывать этим на жизнь. Это как торт: раз в неделю съесть приятно, но на завтрак, обед и ужин — уже чересчур. 
 
Так чем же мне заняться? «Финансовая математика», — подумала я. Все-таки математику в какой-то мере я знаю — к.ф.-м.н. как-никак. Открыла онлайн-лекции по соответствующей теме: спокойным монотонным голосом профессор каждой производной давал своё собственное имя и продолжал вводить все новые и новые термины… где-то на пятнадцатом я поняла, что вот-вот засну и что финансовая математика, хоть и очень популярная и, наверное, интересная тема, но все-таки пусть ей занимается кто-то другой.  
 
 Как училась?  
В какой-то момент я наткнулась на курс из серии «программирование для чайников» от университета Duke (вообще для таких «любителей» технической литературы, как я, онлайн-курсы — просто находка). Не буду лукавить, в университете я думала, не заняться ли разработкой. Но тогда все мои начинания ограничились походом в библиотеку: взяла Страуструпа, принесла домой — и аккуратно поставила на полку.  
 
«Ну ладно, — подумала я теперь, — послушаем это программирование для чайников хотя бы для тренировки английского». И тут меня затянуло. С тем же интересом и вдохновением, с которым моя дочь теперь смотрит «Фиксиков», я смотрела лекции этого курса. Вроде бы знакомые вещи — те же переводы цветной фотографии в черно-белую, автонабор текста и многие другие — открылись мне с новой стороны, со стороны разработчика.  
 
Потом я попросила в качестве подарка на День рождения специализацию на Coursera по Java OOP, чем немного удивила своих близких, но, как говорится, чем бы дитя ни тешилось.  
 
Вообще, если вам кажется, что у меня в декрете было как бы дофига свободного времени, а вы сейчас работаете и вам точно не до освоения новой профессии, то спешу вас огорчить (или обрадовать). Декретный отпуск, хоть и называется отпуском, таковым вовсе не является. Тем более, что я не отношусь к разряду суперженщин, одной рукой помешивающих суп на плите, второй — решающих практические задачи по программированию, третьей кормя малыша, а четвертой вытирая за ним «сюрпризы». Конечно, мне довольно много помогали близкие, занимаясь малышом, пока я разбиралась с Java, за что им большое спасибо! Но иногда приходилось доделывать что-то по курсам, когда вся семья уже смотрела как минимум третий сон. 
 
Вообще это была небыстрая история. На курсы для beginner и intermediate по Java у меня ушло в общей сложности года 1,5. Бывали недели и месяцы, когда не удавалось послушать ни одной лекции. В такие моменты был необычайный соблазн сойти с дистанции и все бросить. Но то ли любовь к программированию (и я очень надеюсь, что именно она), то ли жаба, душившая уже оплаченными курсами, а может и все вместе, возвращали меня обратно в строй. В остальном само обучение шло довольно хорошо: я успешно справлялась со всеми задачами и с момента окончания специализации вплоть до первого собеседования считала, что очень даже неплохо знаю Java)). 
 
 Как я искала и нашла работу?  
Ну тут довольно банально, скажете вы: резюме на hh, откликаешься на вакансии и ходишь по собеседованиям. Но начальных позиций не так много, да и на собеседованиях часто выясняется, что одного Java уже недостаточно, нужно знать по крайней мере git, maven и еще много страшных слов)). На общем фоне очень уж привлекательной была вакансия-стажировка от «Инфосистемы Джет» для недавних выпускников, в которой говорилось: если вы пройдете отборочное тестирование, мы вас много чему научим. И, хотя мой год выпуска не подходил по формальным критериям, я все-таки решила отправить своё резюме, а там будь что будет.  
 
А было так: сначала тест на теорию, потом практические задачи. Если все успешно, то приглашают на 2-недельный интенсив по Java. Если и после этого тоже все хорошо, остаёшься в компании на стажировку. Программа интенсива была интересная и насыщенная. Мы узнали много нового как про Javа, так и про maven и git.  
 
Теоретическая часть гармонично переплеталась с практическими заданиями, которые проверяла целая команда разработчиков, давая feedback, что стоит улучшить и почему. Последние два дня нас разбили на группы, и мы работали над финальным проектом, который нужно было успеть сделать в срок и защитить, то есть объяснить, почему было выбрано именно такое решение поставленной задачи. Еще понравилось, что после интенсива, когда осталась на стажировку, не было ощущения «одын, совсем одын», т.к. ещё несколько человек прошли вместе со мной.  
 
 
 
В компании я работаю около 1,5 лет и в общем-то продолжаю учиться, но уже на более продвинутых курсах. Не открою для вас Америку, если скажу, что в целом разработчикам приходится постоянно учиться, но тем наша профессия и хороша: изучение нового способствует формированию новых нейронных связей в мозге, что, кстати, является профилактикой многих старческих заболеваний (если тема про мозг и обучение вам интересна, рекомендую курсы Барбары Окли на Coursera:)) 
 
 Вместо заключения  
Конечно я не призываю всех срочно бросать свою работу и идти в разработчики. Может быть, вы уже давно разработчик, а вас тянет в менеджмент или куда-то ещё. Или вы мама в декрете и сомневаетесь, возвращаться ли в профессию. Или вы выбрали специальность по принципу «друг тоже туда пошёл» или «родители настояли», а для вас интересно что-то совершенно другое…  
 
Попробуйте! Может, оно и не станет для вас новой профессией и вы поймёте, что прежняя вам куда ближе. Но уж точно это избавит вас от сожалений об упущенных возможностях. Наверное, сейчас одно из лучших времен в истории, когда можно попробовать и научится чему-то новому, даже не выходя из дома. И в этом тоже заслуга ИТ-индустрии, в которой мы с вами работаем :)  
 
 
 
 Мадина Дерягина, младший разработчик «Инфосистемы Джет» 
 
P.S.: кстати, если вы хотите узнать о том, как можно быстро попасть в ИТ, читайте  интервью Александра Садыкова  о роде занятий, обучении и росте функциональных тестировщиков в нашей компании. А еще советую периодически проверять раздел  Стажировки  на сайте «Инфосистемы Джет».


