
Ответ на:  Откровения пьяного старшего инженера 
 
… Я выскажу свое мнение и значительно короче, наверное.  
 
 
 Работа в нашей отрасли полностью построена на порочных стимулах. 
 Лучший способ продвинуться по карьерной лестнице — это смена компании. Компании, в которых вы работаете, будут вознаграждать хорошую работу большей работой и ответственностью, а не большим количеством времени и/или денег. Компании, в которые вы переходите, вознаградят вашу предыдущую хорошую работу в других компаниях большими деньгами. На самом деле это не имеет смысла… См. Пункт №1. 
 Каждый раз, когда я меняю работу, я сокращаю свои обязанности на 50% и увеличиваю зарплату на 50%. На моей первой работе я был очень раздражен, когда новые сотрудники, которые были на моем уровне квалификации, зарабатывали больше, чем я. Теперь другие старожилы в моей компании с таким же уровнем квалификации раздражаются, когда я зарабатываю намного больше, чем они (обратите внимание, что количество смен работы >= 3). На самом деле это не имеет смысла… См. Пункт №1. 
 Хороший код прост, надежен и хорошо протестирован. Отличный код — это хороший код, только он меньше. Лучший код — это отсутствие кода (Best code is no code). К сожалению, большинство компаний не настроены писать лучший код. Во-первых, менеджерам нравится, когда кодеры пишут код (потому что их сотрудники работают). Кодеры любят писать код (потому что иногда им это нравится, а также они чувствуют себя некомфортно, если они не работают). В результате получается много посредственного кода (запутанного, ошибочного и поверхностно протестированного). Посредственный код порождает фонтан ошибок и дополнительных задач, которые заставляют всех быть занятыми и, следовательно, оправданы в их использовании. К сожалению, отличный код и лучший код приводят к тому, что каждый чувствует себя неуверенно и может потерять работу. Можно было подумать, они догадаются, но… См. Пункт №1. 
 У меня нет абсолютно никаких ментальных ресурсов, чтобы работать удаленно по 40 часов в неделю (иногда могу неделю здесь или неделю там). Но если постоянно, каждую неделю, то я могу потратить только несколько часов. Следствие: количество отработанного времени практически не влияет на ваш успех или влияние. Вы могли подумать, что мы переориентируемся сейчас, но… См. Пункт №1. 
 Agile — это культ ритуалов, священников и непоколебимых систем убеждений, который превратился в настоящий ад корпоративного управления, против которого авторы оригинального Agile Manifesto пытались восстать 20 лет назад. Нет, серьезно, вам не нужно быть пешками Big Agile или Agile-Industrial Complex. Не выставляйте себя дураком, подставляя при этом шею. Мы что, снова застряли в 90-х? Ну да ладно… См. Пункт №1. 
  ̶Н̶и̶к̶о̶г̶д̶а̶ ̶н̶е̶ ̶п̶р̶и̶н̶и̶м̶а̶й̶т̶е̶ ̶н̶а̶ ̶р̶а̶б̶о̶т̶у̶ ̶п̶р̶о̶г̶р̶а̶м̶м̶и̶с̶т̶а̶ ̶с̶ ̶д̶и̶п̶л̶о̶м̶о̶м̶ ̶п̶о̶ ̶п̶р̶и̶к̶л̶а̶д̶н̶о̶й̶ ̶м̶а̶т̶е̶м̶а̶т̶и̶к̶е̶.̶ Ладно, ребята, вы меня подловили, это слишком сурово. Но все же будьте осторожны. 
 Нет такой вещи, как компромисс между работой и личной жизнью… Под этим я подразумеваю, что иногда люди думают, что я принимаю работу, которая плохо оплачивается, за ту, которая удобна или не требует особого напряжения. На низкооплачиваемых вакансиях к вам будут относиться как к дерьму и не будет гибкости. На работе, которая приносит вам богатство, к вам будут относиться как к принцессе, и такая работа может быть бесконечно гибкой. Не знаю, но все-таки взгляните на пункт №1. 
 Если у вас нет обычного, облагаемого налогом брокерского счета, в который вы инвестируете еженедельно или ежемесячно с постоянной суммой (и в диверсифицированный портфель или фонд), вы зря тратите свое время и свою жизнь. Делая это в течение многих лет, вы будете иметь много активов, которые полностью изменят ваш подход к вашей карьере: вы беретесь на работу тогда и только тогда, когда вам нравится работа, а если нет, у вас достаточно денег на F-U, чтобы продолжать искать что-то до тех пор, пока вы не найдете то, что вам нравится. Также есть максимум 401k. Это вырывает вас из цикла, определяемого пунктом № 1 (!!!!!) 
 Если мы собираемся использовать Python, мы используем mypy. 
 Жизнь слишком коротка для C ++. 
 Люди, которые говорят, что теории из Вашей курсовой работы по computer science бесполезны, делают так потому что, они никогда не имели практики в ней на самом деле, и поскольку они никогда не имели практики в ней, они не видят, где ее можно применить, и поскольку они не могут ее применить, они могут сделать вывод, что это бесполезно. Мне это кажется какой-то странной логикой.  
 
 P.S. 
 Первый коммент на Reddit: «Бухни и продолжай писать»


